#N canvas 570 475 1350 590 12;
#N canvas 0 0 663 664 fft-analysis 0;
#X obj 20 126 *~;
#X obj 19 61 inlet~;
#X obj 20 180 rfft~;
#X obj 41 102 tabreceive~ \$0-hann;
#X obj 21 549 *~;
#X obj 66 530 tabreceive~ \$0-hann;
#X obj 21 476 rifft~;
#X obj 21 581 outlet~;
#X obj 22 441 vd~ amp;
#X obj 92 440 vd~ phase;
#X obj 43 320 wrap~;
#X obj 22 344 -~;
#X obj 22 410 /~ 44.1;
#X obj 21 505 /~ 64;
#X obj 21 292 tabreceive~ \$0-delay;
#X obj 154 326 tabreceive~ \$0-feedback;
#X obj 158 366 *~;
#X obj 122 367 *~;
#X obj 22 372 *~ 512;
#X obj 59 212 delwrite~ phase 3000;
#X obj 20 235 delwrite~ amp 3000;
#X text 118 183 comment;
#X text 274 211 write amp and phase into delay-buffer;
#X text 246 443 read out the delay and feedbackarrays for;
#X text 246 469 every audio block (= fft frame) and use the;
#X text 247 491 integer value of each delay bin as multiplier;
#X text 252 512 of the blocksize to calculate the pointer;
#X text 250 533 back into the vd~s before resynthesis.;
#X obj 16 7 block~ 512 4;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 20 0;
#X connect 2 1 19 0;
#X connect 3 0 0 1;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 6 0 13 0;
#X connect 8 0 6 0;
#X connect 8 0 17 0;
#X connect 9 0 6 1;
#X connect 9 0 16 0;
#X connect 10 0 11 1;
#X connect 11 0 18 0;
#X connect 12 0 8 0;
#X connect 12 0 9 0;
#X connect 13 0 4 0;
#X connect 14 0 10 0;
#X connect 14 0 11 0;
#X connect 15 0 17 1;
#X connect 15 0 16 1;
#X connect 16 0 19 0;
#X connect 17 0 20 0;
#X connect 18 0 12 0;
#X restore 81 571 pd fft-analysis;
#N canvas 35 66 600 441 Hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 512 float 0 black black;
#X coords 0 1 511 0 200 120 1;
#X restore 293 249 graph;
#X msg 171 263 0;
#X obj 65 312 osc~;
#X obj 65 264 samplerate~;
#X obj 65 335 *~ -0.5;
#X obj 65 358 +~ 0.5;
#X obj 57 383 tabwrite~ \$0-hann;
#X text 279 241 1;
#X text 272 359 0;
#X text 288 372 0;
#X obj 65 288 / 512;
#X obj 57 241 bng 15 250 50 0 empty empty empty 0 -6 0 8 #fcfcfc #000000
#000000;
#X text 336 221 Hann window;
#X text 113 310 period 512;
#X text 90 215 recalculate Hann;
#X text 125 230 window table;
#X text 40 27 The Hann window is now recomputed on 'loadbang' to make
the file smaller (it doesn't have to be saved with the array.);
#X text 474 375 511;
#X obj 81 149 inlet;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 11 0 1 0;
#X connect 11 0 6 0;
#X connect 18 0 11 0;
#X restore 498 544 pd Hann-window;
#N canvas 0 0 454 304 (subpatch) 0;
#X array \$0-delay 256 float 17 black black;
#A 0 0 5.72289 6.72289 7.22289 7.72289 8.22289 8.72289 9.05623 9.38956
9.72289 9.72289 9.72289 9.72289 9.72289 9.72289 9.72289 9.72289 9.72289
9.72289 10.0562 10.3896 10.7229 11.0562 11.3896 11.7229 12.7229 20.7229
23.7229 25.7229 26.7229 27.7229 31.7229 32.0562 32.3896 32.7229 34.2229
35.7229 36.7229 37.7229 38.7229 39.7229 40.7229 42.7229 43.7229 47.7229
46.7229 46.0562 45.3896 44.7229 42.7229 41.7229 40.7229 39.7229 38.2229
37.7229 36.7229 35.7229 34.7229 33.7229 33.0562 32.3896 31.7229 30.7229
30.2943 29.8657 29.4372 29.0086 28.58 28.1515 27.7229 27.2229 26.7229
26.2229 25.7229 25.2229 24.7229 24.1229 23.5229 22.9229 22.3229 21.7229
21.2229 20.7229 19.7229 19.7229 19.7229 19.7229 19.4729 19.2229 18.9729
18.7229 18.2229 17.7229 17.3896 17.0562 16.7229 16.7229 16.7229 16.7229
16.7229 16.7229 16.7229 16.7229 16.7229 16.7229 21.6866 21.6866 21.6866
21.6866 21.6866 21.6866 21.6866 21.6866 21.6866 22.1866 22.6866 22.6866
22.6866 22.6866 22.6866 22.6866 22.6866 22.6866 23.1866 23.6866 24.1866
24.6866 25.0199 25.3532 25.6866 26.2866 26.8866 27.4866 28.0866 28.6866
28.6866 28.6866 28.6866 28.6866 29.3532 30.0199 30.6866 31.1866 31.6866
32.1866 32.6866 33.3532 34.0199 34.6866 35.258 35.8294 36.4009 36.9723
37.5437 38.1152 38.6866 39.1151 39.5437 39.9723 40.4009 40.8294 41.258
41.6866 42.2866 42.8866 43.4866 44.0866 44.6866 45.3532 46.0199 46.6866
47.1866 47.6866 48.1866 48.6866 48.9366 49.1866 49.4366 49.6866 50.0199
50.3532 50.6866 51.0199 51.3532 51.6866 52.3532 53.0199 53.6866 54.0866
54.4866 54.8866 55.2866 55.6866 55.7977 55.9088 56.0199 56.131 56.2421
56.3532 56.4644 56.5755 56.6866 56.9723 57.258 57.5437 57.8294 58.1151
58.4009 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866
58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866
58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866
58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.6866 58.5616
58.4366 58.3116 58.1866 58.0616 57.9366 57.8116 57.6866 57.6866 57.6866
57.6866 57.6866 57.6866 57.6866;
#X coords 0 60 255 0 256 60 1;
#X restore 470 193 graph;
#X text 464 255 0;
#X text 712 260 22K;
#X msg 240 435 const 100;
#X msg 230 406 const 0;
#X text 456 185 2;
#X obj 230 465 s \$0-delay;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-feedback 256 float 3 black black;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.00362337 0.0119568 0.0202903
0.0258459 0.0314015 0.0369571 0.053624 0.0702909 0.0869578 0.103625
0.120292 0.133625 0.146959 0.160292 0.173626 0.186959 0.220293 0.253627
0.28696 0.311961 0.336961 0.353628 0.403629 0.420296 0.436962 0.453629
0.486963 0.520297 0.536964 0.553631 0.570298 0.582798 0.595298 0.607798
0.620298 0.653632 0.670299 0.686966 0.686966 0.686966 0.686966 0.692521
0.698077 0.703633 0.707799 0.711966 0.716133 0.7203 0.7203 0.7203 0.728633
0.736966 0.741133 0.7453 0.749467 0.753633 0.7578 0.761967 0.766134
0.7703 0.773634 0.776967 0.7803 0.783634 0.786967 0.795301 0.803634
0.811967 0.820301 0.820301 0.820301 0.820301 0.820301 0.820301 0.820301
0.820301 0.820301 0.820301 0.820301 0.820301 0.820301 0.824468 0.828634
0.832801 0.836968 0.83882 0.840672 0.842523 0.844375 0.846227 0.848079
0.849931 0.851783 0.853635 0.856968 0.860301 0.863635 0.866968 0.870302
0.870302 0.870302 0.870302 0.870302 0.870302 0.870302 0.870302 0.870302
0.870302 0.870302 0.870302 0.870302 0.870302 0.870302 0.870302 0.870302
0.873079 0.875857 0.878635 0.881413 0.884191 0.886968 0.886968 0.886968
0.886968 0.886968 0.886968 0.886968 0.886968 0.886968 0.886968 0.886968
0.886968 0.886968 0.886968 0.882802 0.878635 0.874468 0.870302 0.867524
0.864746 0.861968 0.85919 0.856413 0.853635 0.850857 0.848079 0.845301
0.842523 0.839746 0.836968 0.828634 0.820301 0.820301 0.820301 0.820301
0.820301 0.820301 0.820888 0.821475 0.822062 0.822649 0.823235 0.823822
0.824409 0.824996 0.825583 0.82617 0.826757 0.827343 0.827343 0.827343
0.810677 0.79401 0.782898 0.771787 0.760676 0.748176 0.735676 0.723175
0.710675 0.706509 0.702342 0.698175 0.694008 0.687342 0.680675 0.674008
0.667341 0.660675 0.655119 0.649563 0.644008 0.644008 0.644008 0.638452
0.632896 0.627341 0.61623 0.605118 0.594007 0.57734 0.57734 0.560673
0.55234 0.544006 0.535673 0.527339 0.510673 0.502339 0.494006 0.494006
0.477339 0.460672 0.455116 0.449561 0.444005 0.427338 0.410671 0.394004
0.377337 0.360671 0.344004 0.33567 0.327337 0.319003 0.31067 0.289836
0.269003 0.248169 0.227335 0.210669 0.194002 0.177335 0.144001 0.127334
0.110667 0.0940003 0.0773335 0;
#X coords 0 1 256 0 256 60 1;
#X restore 470 301 graph;
#X text 466 365 0;
#X text 715 369 22K;
#X msg 261 558 const 0;
#X obj 261 617 s \$0-feedback;
#X text 318 405 <- reset delay;
#X text 347 553 <- reset feedback;
#X msg 272 586 const 0.7;
#X text 454 297 1;
#X text 25 78 in each individual bin.;
#X text 27 63 The two arrays below are for setting the delay and feedback
;
#X text 195 2 SPECTRAL DELAY;
#X text 25 99 See the fft-analysis subpatch for details how it is done.
;
#X text 207 719 Johannes Kreidler and Orm Finnendahl 2006;
#X text 23 23 Example patch for spectral delay \, utilizing Miller
;
#X text 24 38 Puckette's patch on Fourier Resynthesis.;
#X obj 83 538 inlet~;
#X obj 79 618 outlet~;
#X obj 189 331 inlet;
#X msg 197 366 const \$1;
#X obj 500 496 inlet;
#X text 701 163 WIP;
#X connect 0 0 26 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 12 0 13 0;
#X connect 16 0 13 0;
#X connect 25 0 0 0;
#X connect 27 0 28 0;
#X connect 28 0 8 0;
#X connect 29 0 1 0;
#X coords 0 -1 1 1 313 237 1 445 154;
